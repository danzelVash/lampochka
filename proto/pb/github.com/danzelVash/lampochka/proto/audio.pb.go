// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/audio.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetAudioRequest struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Chunk         []byte                     `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"`
	Commands      []*GetAudioRequest_Command `protobuf:"bytes,2,rep,name=commands,proto3" json:"commands,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAudioRequest) Reset() {
	*x = GetAudioRequest{}
	mi := &file_proto_audio_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAudioRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAudioRequest) ProtoMessage() {}

func (x *GetAudioRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_audio_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAudioRequest.ProtoReflect.Descriptor instead.
func (*GetAudioRequest) Descriptor() ([]byte, []int) {
	return file_proto_audio_proto_rawDescGZIP(), []int{0}
}

func (x *GetAudioRequest) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

func (x *GetAudioRequest) GetCommands() []*GetAudioRequest_Command {
	if x != nil {
		return x.Commands
	}
	return nil
}

type GetAudioResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Command       string                 `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAudioResponse) Reset() {
	*x = GetAudioResponse{}
	mi := &file_proto_audio_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAudioResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAudioResponse) ProtoMessage() {}

func (x *GetAudioResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_audio_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAudioResponse.ProtoReflect.Descriptor instead.
func (*GetAudioResponse) Descriptor() ([]byte, []int) {
	return file_proto_audio_proto_rawDescGZIP(), []int{1}
}

func (x *GetAudioResponse) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

type GetAudioRequest_Command struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAudioRequest_Command) Reset() {
	*x = GetAudioRequest_Command{}
	mi := &file_proto_audio_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAudioRequest_Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAudioRequest_Command) ProtoMessage() {}

func (x *GetAudioRequest_Command) ProtoReflect() protoreflect.Message {
	mi := &file_proto_audio_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAudioRequest_Command.ProtoReflect.Descriptor instead.
func (*GetAudioRequest_Command) Descriptor() ([]byte, []int) {
	return file_proto_audio_proto_rawDescGZIP(), []int{0, 0}
}

func (x *GetAudioRequest_Command) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_proto_audio_proto protoreflect.FileDescriptor

const file_proto_audio_proto_rawDesc = "" +
	"\n" +
	"\x11proto/audio.proto\x12\x05neuro\"\x82\x01\n" +
	"\x0fGetAudioRequest\x12\x14\n" +
	"\x05chunk\x18\x01 \x01(\fR\x05chunk\x12:\n" +
	"\bcommands\x18\x02 \x03(\v2\x1e.neuro.GetAudioRequest.CommandR\bcommands\x1a\x1d\n" +
	"\aCommand\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\",\n" +
	"\x10GetAudioResponse\x12\x18\n" +
	"\acommand\x18\x01 \x01(\tR\acommand2P\n" +
	"\x0fAudioRecognizer\x12=\n" +
	"\bGetAudio\x12\x16.neuro.GetAudioRequest\x1a\x17.neuro.GetAudioResponse\"\x00B'Z%github.com/danzelVash/lampochka/protob\x06proto3"

var (
	file_proto_audio_proto_rawDescOnce sync.Once
	file_proto_audio_proto_rawDescData []byte
)

func file_proto_audio_proto_rawDescGZIP() []byte {
	file_proto_audio_proto_rawDescOnce.Do(func() {
		file_proto_audio_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_audio_proto_rawDesc), len(file_proto_audio_proto_rawDesc)))
	})
	return file_proto_audio_proto_rawDescData
}

var file_proto_audio_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_proto_audio_proto_goTypes = []any{
	(*GetAudioRequest)(nil),         // 0: neuro.GetAudioRequest
	(*GetAudioResponse)(nil),        // 1: neuro.GetAudioResponse
	(*GetAudioRequest_Command)(nil), // 2: neuro.GetAudioRequest.Command
}
var file_proto_audio_proto_depIdxs = []int32{
	2, // 0: neuro.GetAudioRequest.commands:type_name -> neuro.GetAudioRequest.Command
	0, // 1: neuro.AudioRecognizer.GetAudio:input_type -> neuro.GetAudioRequest
	1, // 2: neuro.AudioRecognizer.GetAudio:output_type -> neuro.GetAudioResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_audio_proto_init() }
func file_proto_audio_proto_init() {
	if File_proto_audio_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_audio_proto_rawDesc), len(file_proto_audio_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_audio_proto_goTypes,
		DependencyIndexes: file_proto_audio_proto_depIdxs,
		MessageInfos:      file_proto_audio_proto_msgTypes,
	}.Build()
	File_proto_audio_proto = out.File
	file_proto_audio_proto_goTypes = nil
	file_proto_audio_proto_depIdxs = nil
}
